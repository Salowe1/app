name: New Build and Release iOS Ipa

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: Build iOS Ipa
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      # Install Flutter and set the stable channel
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # Restore Pods Cache
      - name: Restore Pods Cache
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      # Fetch dependencies
      - run: flutter pub get

      # Manually run pod install before setting the skip flag
      - run: |
          cd ios
          pod install

      # Set environment variable to skip pod install
      - run: export SKIP_POD_INSTALL=true

      # Build the iOS release version without running pod install again
      - run: flutter build ios --release --no-codesign

      # Prepare Payload directory for IPA creation
      - run: mkdir -p Payload/Runner.app
        working-directory: build/ios/iphoneos

      # Move the built Runner.app to the Payload directory
      - run: mv Runner.app Payload/
        working-directory: build/ios/iphoneos

      # Create the IPA file by zipping the Payload folder
      - name: Zip output to create IPA
        run: zip -r FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      # Upload the IPA file as a release asset
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.PAT_TOKEN }}  # Use your personal access token
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v1.0
          overwrite: true
          body: "Congrats! Your iOS app is built and released."

      # Cache Pods
      - name: Cache Pods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
